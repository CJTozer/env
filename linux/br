#!/bin/bash

branch=""
branches=`git branch $@ 2>/dev/null`
#color codes
ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_DESC=$ESC_SEQ"36;02m"
COL_HEAD=$ESC_SEQ"32;01m"
COL_LINE=$ESC_SEQ"35;02m"

# requires git > v.1.7.9

# you can set branch's description using command
# git branch --edit-description
# this opens the configured text editor, enter message, save and exit
# if one editor does not work (for example Sublime does not work for me)
# try another one, like vi

# you can see branch's description using
# git config branch.<branch name>.description
while read -r branch; do
  # git marks current branch with "* ", remove it
  clean_branch_name=${branch//\*\ /}
  description=`git config branch.$clean_branch_name.description`
  if [[ -z $description ]]
  then
    line="                     "
  else
    line="---------------------"
  fi
  if [[ "${branch::1}" == "*" ]]
  then
    printf "$COL_HEAD%s $COL_LINE${line:${#branch}} $COL_DESC$description$COL_RESET\n" "$branch"
  else
    printf "  %s $COL_LINE${line:${#branch}+2} $COL_DESC$description$COL_RESET\n" "$branch"
  fi
  # printf "$COL_DESC$description$COL_RESET\n"
done <<< "$branches"

# example output
# $ ./branches.sh
# * master        this is master branch
#   one           this is simple branch for testing
#
# Based on: https://github.com/bahmutov/git-branches/blob/master/branches.sh
